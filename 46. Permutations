class Solution:
    def permute(self, nums):
        result = []

        def backtrack(path, remaining):
            if not remaining:
                result.append(path[:])
                return
            for i in range(len(remaining)):
                # Choose
                path.append(remaining[i])
                # Explore
                backtrack(path, remaining[:i] + remaining[i+1:])
                # Unchoose
                path.pop()

        backtrack([], nums)
        return result
